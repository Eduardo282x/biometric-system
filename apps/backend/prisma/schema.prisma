// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  name     String
  lastName String
  password String
  role     Role      @default(RECEPCIONISTA)
  payments Payment[] // pagos que este usuario ha registrado
}

enum Role {
  GERENTE
  RECEPCIONISTA
}

model Client {
  id              Int               @id @default(autoincrement())
  name            String
  lastName        String
  identify        String            @unique
  email           String
  phone           String
  address         String
  photo           String? // opcional
  createdDate     DateTime          @default(now())
  payments        Payment[]
  ReminderHistory ReminderHistory[]
}

model Payment {
  id            Int      @id @default(autoincrement())
  clientId      Int
  client        Client   @relation(fields: [clientId], references: [id])
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  methodPayment String
  amount        Int
  description   String
  datePay       DateTime @default(now())
  nextDatePay   DateTime
}

model Reminder {
  id              String            @id @default(uuid())
  name            String
  subject         String
  message         String
  daysBefore      Int
  isActive        Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ReminderHistory ReminderHistory[]
}

model ReminderHistory {
  id         String   @id @default(uuid())
  clientId   Int
  reminderId String
  client     Client   @relation(fields: [clientId], references: [id])
  reminder   Reminder @relation(fields: [reminderId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
